import { Link } from "react-router-dom";

export const Navbar = ({ menuOpen, setMenuOpen }) => {

  useEffect(() => {

    document.body.style.overflow = menuOpen ? "hidden" : "";

  }, [menuOpen]);

  return (

<nav className="fixed top-0 w-full z-40 bg-blue-900 backdrop-blur-lg border-b border-white/10 shadow-lg">

      <div className="max-w-7xl mx-auto px-4">

        <div className="flex justify-between items-center h-16">

          <Link to="/" className="font-mono text-xl font-bold text-white">

            {" "} Gan<span className="text-blue-300">App</span> {" "}

          </Link>

          <div className="w-7 h-5 relative cursor-pointer z-40 md:hidden" onClick={() => setMenuOpen((prev) => !prev)}>

            &#9776;

          </div>

          <div className="hidden md:flex items-center space-x-8">

          <Link to="/" className="text-gray-300 hover:text-white transition-colors">Home</Link>

          <Link to="/admin" className="text-gray-300 hover:text-white transition-colors">Admin</Link>

          <Link to="/organizer" className="text-gray-300 hover:text-white transition-colors">Organizer</Link>

          <Link to="/participants" className="text-gray-300 hover:text-white transition-colors">Participants</Link>

          <Link to="/login" className="text-gray-300 hover:text-blue-300 transition-colors font-semibold border border-white rounded px-3 py-1 hover:bg-white hover:text-blue-900 transition-colors">
            Log In
          </Link>

          </div>

        </div>

      </div>

    </nav>

  );

};
=======
import { useEffect, useState } from "react";
import { Link } from "react-router-dom";

export const Navbar = ({ menuOpen, setMenuOpen }) => {
  const [activeSection, setActiveSection] = useState(null);
  const [menuItems, setMenuItems] = useState([
    { name: "Home", to: "/" },
    { name: "Admin", to: "/admin" },
    { name: "Organizer", to: "/organizer" },
    { name: "Participants", to: "/participants" },
    { name: "Log In", to: "/login", special: true }
  ]);

  useEffect(() => {
    document.body.style.overflow = menuOpen ? "hidden" : "";
  }, [menuOpen]);

  const handleSectionClick = (section) => {
    setActiveSection(section);
    if (section === "Organizer") {
      setMenuItems([
        { name: "Home", to: "/" },
        { name: "View Events", to: "/organizer/view-events" },
        { name: "Create Event", to: "/organizer/create-event" }
      ]);
    } else if (section === "Admin") {
      setMenuItems([
        { name: "Home", to: "/" },
        { name: "Admin Dashboard", to: "/admin" }
      ]);
    } else if (section === "Participants") {
      setMenuItems([
        { name: "Home", to: "/" },
        { name: "Participants", to: "/participants" }
      ]);
    } else {
      // Default menu
      setMenuItems([
        { name: "Home", to: "/" },
        { name: "Admin", to: "/admin" },
        { name: "Organizer", to: "/organizer" },
        { name: "Participants", to: "/participants" },
        { name: "Log In", to: "/login", special: true }
      ]);
    }
    setMenuOpen(false); // Close mobile menu on selection
  };

  return (
    <nav className="fixed top-0 w-full z-40 bg-blue-900 backdrop-blur-lg border-b border-white/10 shadow-lg">
      <div className="max-w-7xl mx-auto px-4">
        <div className="flex justify-between items-center h-16">
          <Link to="/" className="font-mono text-xl font-bold text-white">
            {" "} Gan<span className="text-blue-300">App</span> {" "}
          </Link>
          <div
            className="w-7 h-5 relative cursor-pointer z-40 md:hidden"
            onClick={() => setMenuOpen((prev) => !prev)}
          >
            &#9776;
          </div>
          <div className="hidden md:flex items-center space-x-8">
            {menuItems.map((item) =>
              item.special ? (
                <Link
                  key={item.name}
                  to={item.to}
                  className="text-gray-300 hover:text-blue-300 transition-colors font-semibold border border-white rounded px-3 py-1 hover:bg-white hover:text-blue-900 transition-colors"
                  onClick={() => handleSectionClick(null)}
                >
                  {item.name}
                </Link>
              ) : (
                <button
                  key={item.name}
                  className="text-gray-300 hover:text-white transition-colors bg-transparent border-none cursor-pointer"
                  onClick={() => handleSectionClick(item.name)}
                >
                  {item.name}
                </button>
              )
            )}
          </div>
        </div>
      </div>
    </nav>
  );
};
